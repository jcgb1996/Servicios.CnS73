//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.Cine.ProyectoS73.CatalogoServicesClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CatalogoServicesClient.ICatalogoProyecto")]
    public interface ICatalogoProyecto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/GetData", ReplyAction="http://tempuri.org/ICatalogoProyecto/GetDataResponse")]
        string GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/GetData", ReplyAction="http://tempuri.org/ICatalogoProyecto/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/Datos", ReplyAction="http://tempuri.org/ICatalogoProyecto/DatosResponse")]
        Servicios.CnS73.Catalogo[] Datos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/Datos", ReplyAction="http://tempuri.org/ICatalogoProyecto/DatosResponse")]
        System.Threading.Tasks.Task<Servicios.CnS73.Catalogo[]> DatosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarTipoPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarTipoPeliculaResponse")]
        Servicios.CnS73.TipoPelicula[] ConsultarTipoPelicula();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarTipoPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarTipoPeliculaResponse")]
        System.Threading.Tasks.Task<Servicios.CnS73.TipoPelicula[]> ConsultarTipoPeliculaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarSala", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarSalaResponse")]
        Servicios.CnS73.Salas[] ConsultarSala();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarSala", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarSalaResponse")]
        System.Threading.Tasks.Task<Servicios.CnS73.Salas[]> ConsultarSalaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/IngresarPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/IngresarPeliculaResponse")]
        string IngresarPelicula(Servicios.CnS73.Catalogo NuevaPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/IngresarPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/IngresarPeliculaResponse")]
        System.Threading.Tasks.Task<string> IngresarPeliculaAsync(Servicios.CnS73.Catalogo NuevaPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/saludar", ReplyAction="http://tempuri.org/ICatalogoProyecto/saludarResponse")]
        void saludar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/saludar", ReplyAction="http://tempuri.org/ICatalogoProyecto/saludarResponse")]
        System.Threading.Tasks.Task saludarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarCine", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarCineResponse")]
        Servicios.CnS73.Cine[] ConsultarCine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ConsultarCine", ReplyAction="http://tempuri.org/ICatalogoProyecto/ConsultarCineResponse")]
        System.Threading.Tasks.Task<Servicios.CnS73.Cine[]> ConsultarCineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/CatalogoPorIdPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/CatalogoPorIdPeliculaResponse")]
        Servicios.CnS73.Catalogo[] CatalogoPorIdPelicula(int idPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/CatalogoPorIdPelicula", ReplyAction="http://tempuri.org/ICatalogoProyecto/CatalogoPorIdPeliculaResponse")]
        System.Threading.Tasks.Task<Servicios.CnS73.Catalogo[]> CatalogoPorIdPeliculaAsync(int idPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/IngrsarVentas", ReplyAction="http://tempuri.org/ICatalogoProyecto/IngrsarVentasResponse")]
        string IngrsarVentas(Servicios.CnS73.Ventas Datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/IngrsarVentas", ReplyAction="http://tempuri.org/ICatalogoProyecto/IngrsarVentasResponse")]
        System.Threading.Tasks.Task<string> IngrsarVentasAsync(Servicios.CnS73.Ventas Datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ActualizarTablaCatalogo", ReplyAction="http://tempuri.org/ICatalogoProyecto/ActualizarTablaCatalogoResponse")]
        string ActualizarTablaCatalogo(int numeroEntradas, int idPelicula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoProyecto/ActualizarTablaCatalogo", ReplyAction="http://tempuri.org/ICatalogoProyecto/ActualizarTablaCatalogoResponse")]
        System.Threading.Tasks.Task<string> ActualizarTablaCatalogoAsync(int numeroEntradas, int idPelicula);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogoProyectoChannel : Web.Cine.ProyectoS73.CatalogoServicesClient.ICatalogoProyecto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogoProyectoClient : System.ServiceModel.ClientBase<Web.Cine.ProyectoS73.CatalogoServicesClient.ICatalogoProyecto>, Web.Cine.ProyectoS73.CatalogoServicesClient.ICatalogoProyecto {
        
        public CatalogoProyectoClient() {
        }
        
        public CatalogoProyectoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogoProyectoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogoProyectoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogoProyectoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public Servicios.CnS73.Catalogo[] Datos() {
            return base.Channel.Datos();
        }
        
        public System.Threading.Tasks.Task<Servicios.CnS73.Catalogo[]> DatosAsync() {
            return base.Channel.DatosAsync();
        }
        
        public Servicios.CnS73.TipoPelicula[] ConsultarTipoPelicula() {
            return base.Channel.ConsultarTipoPelicula();
        }
        
        public System.Threading.Tasks.Task<Servicios.CnS73.TipoPelicula[]> ConsultarTipoPeliculaAsync() {
            return base.Channel.ConsultarTipoPeliculaAsync();
        }
        
        public Servicios.CnS73.Salas[] ConsultarSala() {
            return base.Channel.ConsultarSala();
        }
        
        public System.Threading.Tasks.Task<Servicios.CnS73.Salas[]> ConsultarSalaAsync() {
            return base.Channel.ConsultarSalaAsync();
        }
        
        public string IngresarPelicula(Servicios.CnS73.Catalogo NuevaPelicula) {
            return base.Channel.IngresarPelicula(NuevaPelicula);
        }
        
        public System.Threading.Tasks.Task<string> IngresarPeliculaAsync(Servicios.CnS73.Catalogo NuevaPelicula) {
            return base.Channel.IngresarPeliculaAsync(NuevaPelicula);
        }
        
        public void saludar() {
            base.Channel.saludar();
        }
        
        public System.Threading.Tasks.Task saludarAsync() {
            return base.Channel.saludarAsync();
        }
        
        public Servicios.CnS73.Cine[] ConsultarCine() {
            return base.Channel.ConsultarCine();
        }
        
        public System.Threading.Tasks.Task<Servicios.CnS73.Cine[]> ConsultarCineAsync() {
            return base.Channel.ConsultarCineAsync();
        }
        
        public Servicios.CnS73.Catalogo[] CatalogoPorIdPelicula(int idPelicula) {
            return base.Channel.CatalogoPorIdPelicula(idPelicula);
        }
        
        public System.Threading.Tasks.Task<Servicios.CnS73.Catalogo[]> CatalogoPorIdPeliculaAsync(int idPelicula) {
            return base.Channel.CatalogoPorIdPeliculaAsync(idPelicula);
        }
        
        public string IngrsarVentas(Servicios.CnS73.Ventas Datos) {
            return base.Channel.IngrsarVentas(Datos);
        }
        
        public System.Threading.Tasks.Task<string> IngrsarVentasAsync(Servicios.CnS73.Ventas Datos) {
            return base.Channel.IngrsarVentasAsync(Datos);
        }
        
        public string ActualizarTablaCatalogo(int numeroEntradas, int idPelicula) {
            return base.Channel.ActualizarTablaCatalogo(numeroEntradas, idPelicula);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarTablaCatalogoAsync(int numeroEntradas, int idPelicula) {
            return base.Channel.ActualizarTablaCatalogoAsync(numeroEntradas, idPelicula);
        }
    }
}
